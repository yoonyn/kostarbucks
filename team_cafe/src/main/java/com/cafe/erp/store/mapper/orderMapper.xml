<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe.erp.store.model.OrderDAO">

	<!-- 리스트 보기 및 페이징 처리 -->
	<select id="getStockList" parameterType="hashmap" resultType="com.cafe.erp.store.model.StockDTO">
		select * from
		( select A.*, rownum r from
		( select
		cafe_stock.stock_code, cafe_stock.stock_productname,
		cafe_stock.stock_detailname, cafe_stock.stock_standard,
		cafe_stock.stock_price, cafe_stock.stock_image,
		cafe_account.account_name, cafe_stock.account_number
		from cafe_stock inner join Cafe_account on cafe_stock.account_number =	cafe_account.account_number
		ORDER BY stock_code desc) A
		)
		where r >= #{ start } and r &lt;= #{ end }
	</select>
	<select id="getStockCount" resultType="integer">
		SELECT COUNT(*)FROM
		CAFE_STOCK
	</select>
	
	<!-- 담기용 table에 insert -->
	<insert id="insertordercart" parameterType="com.cafe.erp.store.model.OrderDTO">
		insert into Cafe_order_cart(cart_number, cart_stock_productname, cart_stock_detailname, cart_stock_price,
		cart_stock_quantity, stock_code, account_number) values( (select NVL(max(cart_number),0) + 1 from Cafe_order_cart), 
		#{cart_stock_productname}, #{cart_stock_detailname}, #{cart_stock_price}, #{cart_stock_quantity}, #{stock_code}, #{account_number})
	</insert>
	
	<!-- 임시 발주 테이블 count -->
	<select id="cafeordercartcount" resultType="integer">
		select count(*) from cafe_order_cart
	</select>
	<!-- 임시로 발주한 목록 불러오기 -->
	<select id="getStockOrderList" parameterType="hashmap" resultType="com.cafe.erp.store.model.OrderDTO">
		select * from
		( select A.*, rownum r from
		( select * from Cafe_order_cart order by cart_number desc) A
		)
		where r >= #{ start } and r &lt;= #{ end }
	</select>
	<select id="getStockOrderCount" resultType="integer">
		select count(*)from Cafe_order_cart
	</select>
	<!-- 임시 발주 해당 발주정보 불러오기 -->
	<select id="getOrder" resultType="com.cafe.erp.store.model.OrderDTO">
		select * from cafe_order_cart where cart_number = #{cart_number}
	</select>
	<!-- 임시 발주 목록 수정 -->
	<update id="updateordercart" parameterType="com.cafe.erp.store.model.OrderDTO">
		update cafe_order_cart set cart_stock_quantity = #{cart_stock_quantity} where cart_number = #{cart_number}
	</update>
	<!-- 임시 발주 목록 삭제 -->
	<delete id="deleteordercart" parameterType="com.cafe.erp.store.model.OrderDTO">
		delete from cafe_order_cart where cart_number = #{cart_number}
	</delete>
	
	<insert id="orderinsert" parameterType="com.cafe.erp.store.model.OrderDTO">
		insert into CAFE_PRODUCTORDER (productOrder_code, productOrder_date, prodectOrder_total)
		values ((select NVL(max(productOrder_code),0) + 1 from CAFE_PRODUCTORDER), sysdate, )
	</insert>
	
	<!-- 임시 발주 목록 총금액 구하기 -->
	<select id="getcarttotal" resultType="integer">
		select nvl(sum (cart_stock_price*cart_stock_quantity), 0) cart_total from Cafe_order_cart
	</select>
	
	<!-- 임시 발주 목록 발주 후 삭제 -->
	<delete id="deleteorderlistcart">
		delete from cafe_order_cart
	</delete>
	
	<!-- 임시 발주 목록에 기존 품목이 있는지 확인 -->
	<select id="getstockcode" resultType="integer">
		select count(*) from cafe_order_cart where stock_code = #{stock_code}
	</select>
	
	<!-- 기존의 수량 변경 -->
	<update id="updatecount" parameterType="com.cafe.erp.store.model.OrderDTO">
		update cafe_order_cart set cart_stock_quantity = (cart_stock_quantity + #{cart_stock_quantity})
		where stock_code = #{stock_code}
	</update>
	
	<!-- productOrder_code 추가 -->
	<update id="updatecode">
		update cafe_order_cart set productOrder_code = (select NVL(max(productOrder_code),0) from cafe_productorder)
	</update>
	<!-- 중복 제거 후 임시 발주 테이블의 accountnumber 가져오기 -->
	<select id="getStockOrderListaccountnumber" resultType="com.cafe.erp.store.model.OrderDTO">
		select distinct account_number from cafe_order_cart
	</select>
	<!-- account_number로 account_eamil 가져오기 -->
	<select id="getemail" resultType="String" parameterType="hashmap">
		select account_email from cafe_account where account_number = #{account_number}
	</select>
	
	<!-- account_number로 리스트 가져오기 -->
	<select id="getOrderListByNumber" parameterType="hashmap" resultType="com.cafe.erp.store.model.OrderDTO">
		select * from cafe_order_cart where account_number = #{account_number}
	</select>
</mapper>