<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cafe.erp.userWeb.model.ProductCartDAO">
<!--

	public List<ProductCartDTO> getProductCartNumByCustomerProduct(ProductCartDTO dto);		//고객코드와 상품코드가 일치하는 장바구니코드(리스트) 가져오기
	public List<ProductCartAddDTO> getProductAddCodeByCartCode(int cartcode);				//해당 장바구니코드의 옵션(추가사항)들을 가져오기 
	
	public void insertProductCart(ProductCartDTO dto);				//장바구니 테이블 insert
	public void insertProductCartAdd(ProductCartAddDTO dto);				//장바구니 옵션내역 insert
	public void updateProductCartNum(ProductCartDTO dto);						// 동일한 내역이 있기때문에 수량만 추가한다.
	public ProductCartDTO getProdctCatrByRecent();						//가장 최근에 저장한 장바구니 데이터 가져오기
		
	public ProductCartAddJoinDTO getCartJoinByCustomerProduct(ProductCartDTO dto);			//고객코드와 상품코드가 일치하는 장바구니코드(리스트)중에서  옵션(추가사항)이 없는 record 가져오기..
	public List<ProductCartAddJoinDTO> getCartListByCustomer(int customer_code);			//로그인한 고객의 장바구니 리스트 가져오기
	public List<ProductVO> getProductList();		// 판매상품리스트 가져오기
	
	
	
	
	public List<ProductCartDTO> getProductCartListByCustomer(int customer_code);		//읽기
	public ProductVO getProductViewByCode(int productcode);		// 판매상품 읽기 by code
	
	
	
	
	public void deleteProductCartAddAll(int customer_code);					//주문이 등록되면 장바구니 옵션내역 삭제..
	public void deleteProductCartAll(int customer_code);					//주문이 등록되면 장바구니 내역 삭제..
	

	
	public void updateListCount(HashMap Map);	//수량만 수정				
	public void deleteListProduct(int cart_code);	//코드로 삭제
	public void deleteListCartAdd(int cart_code);	//CART_CODE_CART_ADD코드로 삭제
	
	
	
		
-->



	<select id="getProductCartNumByCustomerProduct" parameterType="com.cafe.erp.userWeb.model.ProductCartDTO" resultType="com.cafe.erp.userWeb.model.ProductCartDTO">
		 select * FROM CAFE_CART where customer_code=#{customer_code} and cafe_product_code=#{cafe_product_code}
 	</select>
 	
 	<select id="getProductAddCodeByCartCode" parameterType="int" resultType="com.cafe.erp.userWeb.model.ProductCartAddDTO">
		 select * FROM CAFE_CART_ADD where cart_code=#{cartcode}
 	</select>

	<insert id="insertProductCart" parameterType="com.cafe.erp.userWeb.model.ProductCartDTO">
		insert into CAFE_CART(cart_code,customer_code,cafe_product_code,cart_num) values((select NVL(max(cart_code), 0)+1 from CAFE_CART),#{customer_code},#{cafe_product_code},#{cart_num})	
	</insert>
	
	<insert id="insertProductCartAdd" parameterType="com.cafe.erp.userWeb.model.ProductCartAddDTO">
		insert into CAFE_CART_ADD(cart_code,PRODUCT_ADD_CODE) values(#{cart_code},#{product_add_code})	
	</insert>

	<update id="updateProductCartNum"  parameterType="com.cafe.erp.userWeb.model.ProductCartDTO">
		update CAFE_CART set cart_num=cart_num+#{cart_num} where cart_code=#{cart_code}
	</update>
	
	<select id="getProdctCatrByRecent" resultType="com.cafe.erp.userWeb.model.ProductCartDTO">
		 select * FROM CAFE_CART where cart_code= (select MAX(cart_code) FROM CAFE_CART)
 	</select>
 	
 	<select id="getCartJoinByCustomerProduct" parameterType="com.cafe.erp.userWeb.model.ProductCartDTO" resultType="com.cafe.erp.userWeb.model.ProductCartAddJoinDTO">
		 select a.cart_code,a.customer_code,a.cafe_product_code,a.cart_num, nvl(b.PRODUCT_ADD_CODE,0) product_add_code from CAFE_CART a , CAFE_CART_ADD b where a.cart_code=b.cart_code(+) and  customer_code=#{customer_code} and cafe_product_code=#{cafe_product_code} 
minus
select a.cart_code,a.customer_code,a.cafe_product_code,a.cart_num,nvl(b.PRODUCT_ADD_CODE,0) from CAFE_CART a , CAFE_CART_ADD b where a.cart_code=b.cart_code and  customer_code=#{customer_code} and cafe_product_code=#{cafe_product_code}


 	</select>
 	
 	<select id="getCartListByCustomer" parameterType="int" resultType="com.cafe.erp.userWeb.model.ProductCartAddJoinDTO">
		select a.cart_code,a.customer_code,a.cafe_product_code,a.cart_num, nvl(b.PRODUCT_ADD_CODE,0) product_add_code from CAFE_CART a , CAFE_CART_ADD b where a.cart_code=b.cart_code(+) and  customer_code=#{customer_code} order by cart_code
	</select>
 	
 	<select id="getProductList"  resultType="com.cafe.erp.sale.model.ProductVO">
		 select * FROM CAFE_PRODUCT
 	</select>
 	
	<select id="getProductCartListByCustomer" parameterType="int" resultType="com.cafe.erp.userWeb.model.ProductCartDTO">
		 select * FROM CAFE_CART where customer_code=#{customer_code} order by cart_code
 	</select>
 	
 	
 	<delete id="deleteProductCartAddAll" parameterType="int"  >
		delete from CAFE_CART_ADD where cart_code=#{cart_code}
	</delete>
	
	<delete id="deleteProductCartAll" parameterType="int" >
		delete from CAFE_CART where customer_code=#{customer_code} 
	</delete>

	<delete id="deleteListProduct" parameterType="int">
		delete from CAFE_CART where cart_code=#{cart_code}  
	</delete>
	
	<update id="updateListCount"  parameterType="hashmap" >
 		update CAFE_CART set cart_num=#{cart_num}
		where cart_code=#{cart_code}  
	</update>
	
		
	<delete id="deleteListCartAdd" parameterType="int">
		delete from CAFE_CART_ADD where cart_code=#{cart_code}
	</delete>

	
	
	
	
	
	
	
	
	
	
	
	
	
	<select id="getProductViewByCode" parameterType="int" resultType="com.cafe.erp.sale.model.ProductVO">
		select * FROM CAFE_PRODUCT where CAFE_PRODUCT_CODE=#{productcode}
	</select>
	
	
	
	
	<update id="updateProductCategory"  parameterType="com.cafe.erp.userWeb.model.ProductCartDTO">
	
	</update>

	<delete id="deleteProductCategory" parameterType="com.cafe.erp.userWeb.model.ProductCartDTO" >
		
	</delete>
	
	


</mapper>